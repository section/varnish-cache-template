kind: Deployment
apiVersion: apps/v1
metadata:
  name: egress
  labels:
    app: egress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: egress
  template:
    metadata:
      labels:
        app: egress
    spec:
      volumes:
        - name: config-mount
          configMap:
            name: egress-config
      containers:
        - name: proxy
          image: 'gcr.io/section-io/k8s-egress:2.1.1'
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: SECTION_PROXY_NAME
              value: egress
            - name: REDIS_HOST
              value: 127.0.0.1
            - name: PROXY_REGO_KEY
              value: abc
            - name: LIST_KEY_PREFIX
              value: abc
            - name: LIST_KEY_SUFFIX
              value: abc
          resources:
            limits:
              cpu: "100m"
              memory: "100Mi"
            requests:
              cpu: "100m"
              memory: "100Mi"
          volumeMounts:
            - name: config-mount
              readOnly: true
              mountPath: /opt/proxy_config
          livenessProbe:
            httpGet:
              path: /.well-known/section-io/egress-status
              port: 80
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /.well-known/section-io/egress-status
              port: 80
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
